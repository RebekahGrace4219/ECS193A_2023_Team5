{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rebek\\\\Documents\\\\Stuff I want to Keep\\\\Coding\\\\Tread-Frontend\\\\frontend\\\\tread\\\\src\\\\components\\\\Challenge\\\\CurrentChallenge\\\\CurrentChallengeForm.js\",\n  _s = $RefreshSig$();\nimport CurrentSwitch from \"../CurrentSwitch\";\nimport ChallengeScroll from \"../ChallengeScroll\";\nimport ChallengeSelectBar from \"./ChallengeSelectBar\";\nimport React, { useState, useEffect } from 'react';\nimport '../../../css/Shared/shared.css';\nimport '../../../css/Challenge/CurrentChallengeForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrentChallengeForm = () => {\n  _s();\n  const [challengeList, setChallengeList] = useState([]);\n  const [challengeScrollType, setChallengeScrollType] = useState(\"issued\");\n  const [ifIssued, setIfIssued] = useState(true);\n  const [ifSent, setIfSent] = useState(false);\n  const [ifIncoming, setIfIncoming] = useState(false);\n  async function getIssuedRequests() {\n    setChallengeList([{\n      \"title\": \"Do 250 push up.\",\n      \"expiration\": \"Expires in 2d\",\n      \"completion\": \"212/250\"\n    }, {\n      \"title\": \"Do 50 deadlifts\",\n      \"expiration\": \"Expires in 12d\",\n      \"completion\": \"37/50\"\n    }]);\n  }\n  async function getSentRequests() {\n    setChallengeList([\"sent\", \"requests\"]);\n  }\n  async function getIncomingRequests() {\n    setChallengeList([\"incoming\", \"requests\"]);\n  }\n  useEffect(() => {\n    if (ifIssued) {\n      setChallengeScrollType(\"issued\");\n      getIssuedRequests();\n    }\n  }, [ifIssued]);\n  useEffect(() => {\n    if (ifSent) {\n      setChallengeScrollType(\"sent\");\n      getSentRequests();\n    }\n  }, [ifSent]);\n  useEffect(() => {\n    if (ifIncoming) {\n      setChallengeScrollType(\"incoming\");\n      getIncomingRequests();\n    }\n  }, [ifIncoming]);\n  function clickIssued() {\n    setIfIssued(true);\n    setIfSent(false);\n    setIfIncoming(false);\n  }\n  function clickSent() {\n    setIfIssued(false);\n    setIfSent(true);\n    setIfIncoming(false);\n  }\n  function clickIncoming() {\n    setIfIssued(false);\n    setIfSent(false);\n    setIfIncoming(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"CurrentChallengeForm\",\n    className: \"challengeForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"challengeInformationSide\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sectionBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"sectionBarTitle\",\n          children: \"Current Challenges\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ChallengeSelectBar, {\n          children: {\n            \"incomingButton\": clickIncoming,\n            \"sentButton\": clickSent,\n            \"issuedButton\": clickIssued\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChallengeScroll, {\n        type: challengeScrollType,\n        displayInformation: challengeList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"challengeCurrentSwitch\",\n      children: /*#__PURE__*/_jsxDEV(CurrentSwitch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(CurrentChallengeForm, \"UegUlaBHxvi6CtVuQ28kcvQk9to=\");\n_c = CurrentChallengeForm;\nexport default CurrentChallengeForm;\nvar _c;\n$RefreshReg$(_c, \"CurrentChallengeForm\");","map":{"version":3,"names":["CurrentSwitch","ChallengeScroll","ChallengeSelectBar","React","useState","useEffect","CurrentChallengeForm","challengeList","setChallengeList","challengeScrollType","setChallengeScrollType","ifIssued","setIfIssued","ifSent","setIfSent","ifIncoming","setIfIncoming","getIssuedRequests","getSentRequests","getIncomingRequests","clickIssued","clickSent","clickIncoming"],"sources":["C:/Users/rebek/Documents/Stuff I want to Keep/Coding/Tread-Frontend/frontend/tread/src/components/Challenge/CurrentChallenge/CurrentChallengeForm.js"],"sourcesContent":["import CurrentSwitch from \"../CurrentSwitch\";\r\nimport ChallengeScroll from \"../ChallengeScroll\";\r\nimport ChallengeSelectBar from \"./ChallengeSelectBar\";\r\nimport React, {useState, useEffect} from 'react';\r\nimport '../../../css/Shared/shared.css';\r\nimport '../../../css/Challenge/CurrentChallengeForm.css'\r\nconst CurrentChallengeForm = () => {\r\n    const [challengeList, setChallengeList] = useState([]);\r\n    const [challengeScrollType, setChallengeScrollType] = useState(\"issued\");\r\n    const [ifIssued, setIfIssued] = useState(true);\r\n    const [ifSent, setIfSent] = useState(false);\r\n    const [ifIncoming, setIfIncoming] = useState(false);\r\n\r\n    async function getIssuedRequests(){\r\n        setChallengeList([{\"title\": \"Do 250 push up.\", \"expiration\": \"Expires in 2d\", \"completion\":\"212/250\"},\r\n        {\"title\": \"Do 50 deadlifts\", \"expiration\": \"Expires in 12d\", \"completion\":\"37/50\"}]);\r\n    }\r\n\r\n    async function getSentRequests(){\r\n        setChallengeList([\"sent\", \"requests\"]);\r\n    }\r\n\r\n    async function getIncomingRequests(){\r\n        setChallengeList([\"incoming\", \"requests\"]);\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n          if (ifIssued) {\r\n            setChallengeScrollType(\"issued\");\r\n            getIssuedRequests();\r\n          }\r\n        }, [ifIssued]\r\n      );\r\n\r\n      useEffect(\r\n        () => {\r\n          if (ifSent) {\r\n            setChallengeScrollType(\"sent\");\r\n            getSentRequests();\r\n          }\r\n        }, [ifSent]\r\n      );\r\n\r\n      useEffect(\r\n        () => {\r\n          if (ifIncoming) {\r\n            setChallengeScrollType(\"incoming\");\r\n            getIncomingRequests();\r\n          }\r\n        }, [ifIncoming]\r\n      );\r\n\r\n    function clickIssued(){\r\n        setIfIssued(true);\r\n        setIfSent(false);\r\n        setIfIncoming(false);\r\n    }\r\n\r\n    function clickSent(){\r\n        setIfIssued(false);\r\n        setIfSent(true);\r\n        setIfIncoming(false);\r\n    }\r\n\r\n    function clickIncoming(){\r\n        setIfIssued(false);\r\n        setIfSent(false);\r\n        setIfIncoming(true);\r\n    }\r\n\r\n    return (\r\n        <div id = \"CurrentChallengeForm\" className = \"challengeForm\">\r\n            <div className = \"challengeInformationSide\">\r\n                <div className = \"sectionBar\">\r\n                    <h2 className = \"sectionBarTitle\">Current Challenges</h2>\r\n                    <ChallengeSelectBar>{{\"incomingButton\":clickIncoming, \"sentButton\":clickSent, \"issuedButton\":clickIssued}}</ChallengeSelectBar>\r\n                </div>\r\n                <ChallengeScroll type = {challengeScrollType} displayInformation = {challengeList}></ChallengeScroll>\r\n            </div>\r\n            <div className = \"challengeCurrentSwitch\">\r\n                <CurrentSwitch/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurrentChallengeForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
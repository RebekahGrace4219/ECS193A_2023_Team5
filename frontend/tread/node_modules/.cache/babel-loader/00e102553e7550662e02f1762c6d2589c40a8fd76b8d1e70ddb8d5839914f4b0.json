{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rebek\\\\Documents\\\\Stuff I want to Keep\\\\Coding\\\\Tread-Frontend\\\\frontend\\\\tread\\\\src\\\\components\\\\Profile\\\\MedalsScroll.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MedalsScroll = props => {\n  _s();\n  let [ifEarned] = useState(props.ifEarned);\n  let [informationMap, setInformationMap] = useState([]);\n  function getProgressMedals() {\n    // ask for progress medals\n    // move to needed format\n    [{\n      \"description\": \"Run 100 Miles\",\n      \"done\": 79,\n      \"total\": 100\n    }, {\n      \"description\": \"Try 5 types of exercise\",\n      \"done\": 3,\n      \"total\": 5\n    }, {\n      \"description\": \"Make a friend\",\n      \"done\": 0,\n      \"total\": 1\n    }, {\n      \"description\": \"Swim 5 days in one week\",\n      \"done\": 3,\n      \"total\": 5\n    }, {\n      \"description\": \"Join a leauge\",\n      \"done\": 0,\n      \"total\": 1\n    }];\n    setInformationMap();\n  }\n  function getEarnedMedals() {\n    // ask for earned medals\n    // move to needed format\n    setInformationMap();\n  }\n  useEffect(() => {\n    if (ifEarned) {\n      getEarnedMedals();\n    } else {\n      getProgressMedals();\n    }\n  }, [ifEarned]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"MedalsScroll\",\n    children: props.ifEarned ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Earned\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(MedalsScroll, \"5/EVaIpeZDmoX82rkClmlnPnagM=\");\n_c = MedalsScroll;\nexport default MedalsScroll;\nvar _c;\n$RefreshReg$(_c, \"MedalsScroll\");","map":{"version":3,"names":["useState","useEffect","MedalsScroll","props","ifEarned","informationMap","setInformationMap","getProgressMedals","getEarnedMedals"],"sources":["C:/Users/rebek/Documents/Stuff I want to Keep/Coding/Tread-Frontend/frontend/tread/src/components/Profile/MedalsScroll.js"],"sourcesContent":["import {useState, useEffect} from 'react';\r\n\r\nconst MedalsScroll = (props) => {\r\n    let [ifEarned] = useState(props.ifEarned);\r\n    let [informationMap, setInformationMap] = useState([]);\r\n\r\n    function getProgressMedals(){\r\n        // ask for progress medals\r\n        // move to needed format\r\n        [\r\n            {\"description\": \"Run 100 Miles\", \"done\": 79, \"total\": 100},\r\n            {\"description\": \"Try 5 types of exercise\", \"done\": 3, \"total\": 5},\r\n            {\"description\": \"Make a friend\", \"done\": 0, \"total\": 1},\r\n            {\"description\": \"Swim 5 days in one week\", \"done\": 3, \"total\": 5},\r\n            {\"description\": \"Join a leauge\", \"done\": 0, \"total\": 1},\r\n        ]\r\n        setInformationMap();\r\n    }\r\n\r\n    function getEarnedMedals(){\r\n        // ask for earned medals\r\n        // move to needed format\r\n        setInformationMap();\r\n    }\r\n\r\n\r\n    useEffect(\r\n        () => {\r\n          if (ifEarned) {\r\n            getEarnedMedals();\r\n          }\r\n          else {\r\n            getProgressMedals();\r\n          }\r\n        }, [ifEarned]\r\n      );\r\n    return (\r\n        <div id = \"MedalsScroll\">\r\n            {props.ifEarned ?\r\n            <p>Earned</p>\r\n            :\r\n            <p>Progress</p>\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MedalsScroll;"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAC;AAE1C,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAA;EAC5B,IAAI,CAACC,QAAQ,CAAC,GAAGJ,QAAQ,CAACG,KAAK,CAACC,QAAQ,CAAC;EACzC,IAAI,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtD,SAASO,iBAAiB,GAAE;IACxB;IACA;IACA,CACI;MAAC,aAAa,EAAE,eAAe;MAAE,MAAM,EAAE,EAAE;MAAE,OAAO,EAAE;IAAG,CAAC,EAC1D;MAAC,aAAa,EAAE,yBAAyB;MAAE,MAAM,EAAE,CAAC;MAAE,OAAO,EAAE;IAAC,CAAC,EACjE;MAAC,aAAa,EAAE,eAAe;MAAE,MAAM,EAAE,CAAC;MAAE,OAAO,EAAE;IAAC,CAAC,EACvD;MAAC,aAAa,EAAE,yBAAyB;MAAE,MAAM,EAAE,CAAC;MAAE,OAAO,EAAE;IAAC,CAAC,EACjE;MAAC,aAAa,EAAE,eAAe;MAAE,MAAM,EAAE,CAAC;MAAE,OAAO,EAAE;IAAC,CAAC,CAC1D;IACDD,iBAAiB,EAAE;EACvB;EAEA,SAASE,eAAe,GAAE;IACtB;IACA;IACAF,iBAAiB,EAAE;EACvB;EAGAL,SAAS,CACL,MAAM;IACJ,IAAIG,QAAQ,EAAE;MACZI,eAAe,EAAE;IACnB,CAAC,MACI;MACHD,iBAAiB,EAAE;IACrB;EACF,CAAC,EAAE,CAACH,QAAQ,CAAC,CACd;EACH,oBACI;IAAK,EAAE,EAAG,cAAc;IAAA,UACnBD,KAAK,CAACC,QAAQ,gBACf;MAAA,UAAG;IAAM;MAAA;MAAA;MAAA;IAAA,QAAI,gBAEb;MAAA,UAAG;IAAQ;MAAA;MAAA;MAAA;IAAA;EAAI;IAAA;IAAA;IAAA;EAAA,QAEb;AAEd,CAAC;AAAA,GA3CKF,YAAY;AAAA,KAAZA,YAAY;AA6ClB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
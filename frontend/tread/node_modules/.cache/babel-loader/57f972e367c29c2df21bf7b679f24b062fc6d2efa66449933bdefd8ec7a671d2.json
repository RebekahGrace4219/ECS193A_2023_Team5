{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rebek\\\\Documents\\\\Stuff I want to Keep\\\\Coding\\\\Tread-Frontend\\\\frontend\\\\tread\\\\src\\\\components\\\\Profile\\\\MedalsSection.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport MedalsBar from './MedalsBar';\nimport MedalsScroll from './MedalsScroll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MedalsSection = () => {\n  _s();\n  const [ifEarned, setIfEarned] = useState(true);\n  let [informationMap, setInformationMap] = useState([]);\n  function getProgressMedals() {\n    // ask for progress medals\n    // move to needed format\n    let info = [{\n      \"description\": \"Run 100 Miles\",\n      \"done\": 79,\n      \"total\": 100\n    }, {\n      \"description\": \"Try 5 types of exercise\",\n      \"done\": 3,\n      \"total\": 5\n    }, {\n      \"description\": \"Make a friend\",\n      \"done\": 0,\n      \"total\": 1\n    }, {\n      \"description\": \"Swim 5 days in one week\",\n      \"done\": 3,\n      \"total\": 5\n    }, {\n      \"description\": \"Join a leauge\",\n      \"done\": 0,\n      \"total\": 1\n    }];\n    setInformationMap(info);\n  }\n  function getEarnedMedals() {\n    // ask for earned medals\n    // move to needed format\n    let info = [{\n      \"description\": \"Complete a Challenge\",\n      \"date\": \"09-04-2022\"\n    }, {\n      \"description\": \"Add a sensor\",\n      \"date\": \"10-05-2022\"\n    }, {\n      \"description\": \"Try Weighlifting!\",\n      \"date\": \"01-12-2022\"\n    }, {\n      \"description\": \"Jog 5 times\",\n      \"date\": \"10-31-2022\"\n    }, {\n      \"description\": \"Swim 100 km\",\n      \"date\": \"01-26-2022\"\n    }];\n    setInformationMap(info);\n  }\n  useEffect(() => {\n    if (ifEarned) {\n      console.log(\"earned\");\n      getEarnedMedals();\n      console.log(\"\");\n    } else {\n      getProgressMedals();\n    }\n  }, [ifEarned]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"MedalsSection\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"MedalsHeader\",\n      className: \"selectButtonHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Medals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MedalsBar, {\n        changeFunction: setIfEarned\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MedalsScroll, {\n      children: {\n        \"map\": informationMap,\n        \"ifEarned\": ifEarned\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(MedalsSection, \"KwMPb/3TwYGs4YtQzTrgNfq3hBY=\");\n_c = MedalsSection;\nexport default MedalsSection;\nvar _c;\n$RefreshReg$(_c, \"MedalsSection\");","map":{"version":3,"names":["useState","useEffect","MedalsBar","MedalsScroll","MedalsSection","ifEarned","setIfEarned","informationMap","setInformationMap","getProgressMedals","info","getEarnedMedals","console","log"],"sources":["C:/Users/rebek/Documents/Stuff I want to Keep/Coding/Tread-Frontend/frontend/tread/src/components/Profile/MedalsSection.js"],"sourcesContent":["import {useState, useEffect} from 'react';\r\nimport MedalsBar from './MedalsBar';\r\nimport MedalsScroll from './MedalsScroll';\r\n\r\nconst MedalsSection = () => {\r\n    const [ifEarned, setIfEarned] = useState(true);\r\n    let [informationMap, setInformationMap] = useState([]);\r\n\r\n    function getProgressMedals(){\r\n        // ask for progress medals\r\n        // move to needed format\r\n        let info = [\r\n            {\"description\": \"Run 100 Miles\", \"done\": 79, \"total\": 100},\r\n            {\"description\": \"Try 5 types of exercise\", \"done\": 3, \"total\": 5},\r\n            {\"description\": \"Make a friend\", \"done\": 0, \"total\": 1},\r\n            {\"description\": \"Swim 5 days in one week\", \"done\": 3, \"total\": 5},\r\n            {\"description\": \"Join a leauge\", \"done\": 0, \"total\": 1},\r\n        ]\r\n        setInformationMap(info);\r\n    }\r\n\r\n    function getEarnedMedals(){\r\n        // ask for earned medals\r\n        // move to needed format\r\n        let info = [\r\n            {\"description\": \"Complete a Challenge\", \"date\": \"09-04-2022\"},\r\n            {\"description\": \"Add a sensor\", \"date\": \"10-05-2022\"},\r\n            {\"description\": \"Try Weighlifting!\", \"date\": \"01-12-2022\"},\r\n            {\"description\": \"Jog 5 times\", \"date\": \"10-31-2022\"},\r\n            {\"description\": \"Swim 100 km\", \"date\": \"01-26-2022\"},\r\n        ];\r\n        setInformationMap(info);\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n          if (ifEarned) {\r\n            console.log(\"earned\")\r\n            getEarnedMedals();\r\n            console.log(\"\")\r\n          }\r\n          else {\r\n            getProgressMedals();\r\n          }\r\n        }, [ifEarned]\r\n      );\r\n\r\n    return (\r\n    <div id = \"MedalsSection\">\r\n        <div id = \"MedalsHeader\" className =\"selectButtonHeader\">\r\n            <h1>Medals</h1>\r\n            <MedalsBar changeFunction = {setIfEarned}></MedalsBar>\r\n        </div>\r\n\r\n        <MedalsScroll>{{\"map\":informationMap, \"ifEarned\":ifEarned}}</MedalsScroll>\r\n\r\n\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default MedalsSection;"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,YAAY,MAAM,gBAAgB;AAAC;AAE1C,MAAMC,aAAa,GAAG,MAAM;EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC9C,IAAI,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtD,SAASS,iBAAiB,GAAE;IACxB;IACA;IACA,IAAIC,IAAI,GAAG,CACP;MAAC,aAAa,EAAE,eAAe;MAAE,MAAM,EAAE,EAAE;MAAE,OAAO,EAAE;IAAG,CAAC,EAC1D;MAAC,aAAa,EAAE,yBAAyB;MAAE,MAAM,EAAE,CAAC;MAAE,OAAO,EAAE;IAAC,CAAC,EACjE;MAAC,aAAa,EAAE,eAAe;MAAE,MAAM,EAAE,CAAC;MAAE,OAAO,EAAE;IAAC,CAAC,EACvD;MAAC,aAAa,EAAE,yBAAyB;MAAE,MAAM,EAAE,CAAC;MAAE,OAAO,EAAE;IAAC,CAAC,EACjE;MAAC,aAAa,EAAE,eAAe;MAAE,MAAM,EAAE,CAAC;MAAE,OAAO,EAAE;IAAC,CAAC,CAC1D;IACDF,iBAAiB,CAACE,IAAI,CAAC;EAC3B;EAEA,SAASC,eAAe,GAAE;IACtB;IACA;IACA,IAAID,IAAI,GAAG,CACP;MAAC,aAAa,EAAE,sBAAsB;MAAE,MAAM,EAAE;IAAY,CAAC,EAC7D;MAAC,aAAa,EAAE,cAAc;MAAE,MAAM,EAAE;IAAY,CAAC,EACrD;MAAC,aAAa,EAAE,mBAAmB;MAAE,MAAM,EAAE;IAAY,CAAC,EAC1D;MAAC,aAAa,EAAE,aAAa;MAAE,MAAM,EAAE;IAAY,CAAC,EACpD;MAAC,aAAa,EAAE,aAAa;MAAE,MAAM,EAAE;IAAY,CAAC,CACvD;IACDF,iBAAiB,CAACE,IAAI,CAAC;EAC3B;EAEAT,SAAS,CACL,MAAM;IACJ,IAAII,QAAQ,EAAE;MACZO,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACrBF,eAAe,EAAE;MACjBC,OAAO,CAACC,GAAG,CAAC,EAAE,CAAC;IACjB,CAAC,MACI;MACHJ,iBAAiB,EAAE;IACrB;EACF,CAAC,EAAE,CAACJ,QAAQ,CAAC,CACd;EAEH,oBACA;IAAK,EAAE,EAAG,eAAe;IAAA,wBACrB;MAAK,EAAE,EAAG,cAAc;MAAC,SAAS,EAAE,oBAAoB;MAAA,wBACpD;QAAA,UAAI;MAAM;QAAA;QAAA;QAAA;MAAA,QAAK,eACf,QAAC,SAAS;QAAC,cAAc,EAAIC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAa;IAAA;MAAA;MAAA;MAAA;IAAA,QACpD,eAEN,QAAC,YAAY;MAAA,UAAE;QAAC,KAAK,EAACC,cAAc;QAAE,UAAU,EAACF;MAAQ;IAAC;MAAA;MAAA;MAAA;IAAA,QAAgB;EAAA;IAAA;IAAA;IAAA;EAAA,QAGxE;AAEV,CAAC;AAAA,GAvDKD,aAAa;AAAA,KAAbA,aAAa;AAyDnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}